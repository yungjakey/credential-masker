name: Create Release

on:
  push:
    tags:
      - "v*"
  workflow_dispatch:
    inputs:
      tag:
        description: 'Version tag (e.g., v1.0.0)'
        required: true
        default: ''

env:
  RELEASE_VERSION: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.tag || github.ref_name }}

jobs:
  build-binaries:
    name: Build Binaries
    runs-on: ubuntu-latest
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        platform:
          - os: linux
            arch: amd64
            output: credential-masker-linux-amd64
          - os: linux
            arch: arm64
            output: credential-masker-linux-arm64
          - os: darwin
            arch: amd64
            output: credential-masker-darwin-amd64
          - os: darwin
            arch: arm64
            output: credential-masker-darwin-arm64
          - os: windows
            arch: amd64
            output: credential-masker-windows-amd64.exe

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          
      - name: Create tag if manually triggered
        if: github.event_name == 'workflow_dispatch'
        run: |
          git tag ${{ env.RELEASE_VERSION }} || true
          
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.23'
          
      - name: Go module cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Verify Go modules
        run: |
          go mod tidy
          go mod verify

      - name: Build binary
        run: |
          # Disable CGO for cross-compilation
          CGO_ENABLED=0 GOOS=${{ matrix.platform.os }} GOARCH=${{ matrix.platform.arch }} go build -o ${{ matrix.platform.output }} ./cmd

      - name: Upload binary
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.platform.output }}
          path: ${{ matrix.platform.output }}

  create-release:
    needs: build-binaries
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
        
      - name: Display structure of downloaded files
        run: ls -R artifacts
        
      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag_name: ${{ env.RELEASE_VERSION }}
          files: |
            artifacts/credential-masker-linux-amd64/credential-masker-linux-amd64
            artifacts/credential-masker-linux-arm64/credential-masker-linux-arm64
            artifacts/credential-masker-darwin-amd64/credential-masker-darwin-amd64
            artifacts/credential-masker-darwin-arm64/credential-masker-darwin-arm64
            artifacts/credential-masker-windows-amd64.exe/credential-masker-windows-amd64.exe
          draft: false
          prerelease: false
          generate_release_notes: true