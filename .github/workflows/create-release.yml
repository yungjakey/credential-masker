name: Create Release

on:
  push:
    tags:
      - "v*"

jobs:
  build-binaries:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    strategy:
      matrix:
        platform:
          - os: linux
            arch: amd64
            output: credential-masker-linux-amd64
          - os: linux
            arch: arm64
            output: credential-masker-linux-arm64
          - os: windows
            arch: amd64
            output: credential-masker-windows-amd64.exe

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.20'

      - name: Build binary
        run: |
          GOOS=${{ matrix.platform.os }} GOARCH=${{ matrix.platform.arch }} go build -o ${{ matrix.platform.output }} ./cmd/main.go

      - name: Upload binary
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.platform.output }}
          path: ${{ matrix.platform.output }}

  create-release:
    needs: build-binaries
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Download artifacts
        uses: actions/download-artifact@v3
        
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            credential-masker-linux-amd64/credential-masker-linux-amd64
            credential-masker-linux-arm64/credential-masker-linux-arm64
            credential-masker-windows-amd64.exe/credential-masker-windows-amd64.exe
          draft: false
          prerelease: false
          generate_release_notes: true
